html,
body {
  margin: 0;
  height: 100%;
  background: rgb(233, 240, 247);

  /*center element*/
  display: flex;
  align-items: center;
  justify-content: center;
}

#container {
  --cellSize: 0;
  --rows: 11;
  --cols:11;
  width: calc(var(--cols) * var(--cellSize));
  height: calc(var(--rows) * var(--cellSize));
  /* background: black; */
  position: relative;
  /* transform: rotate(45deg) scale(0.9); */
}

.cell {
  --row: 0;
  --angle: 0deg;
  --col: 0;
  position: absolute;
  width: var(--cellSize);
  height: var(--cellSize);
  top: calc(var(--row) * var(--cellSize));
  left: calc(var(--col) * var(--cellSize));
  /* transform: translate(calc(var(--col) * var(--cellSize)), ); */
  background: black;
  overflow: hidden;
  transform: rotateZ(var(--angle));
  transition: transform 0.5s;

  box-shadow: 0 0 0 0.5px rgba(255, 255, 255, 0.4);
}

.cell:focus {
  outline: none;
  z-index: 500;
}

.debug-cell {
  --row: 0;
  --col: 0;
  --diameter: 10px;
  position: absolute;
  width: var(--diameter);
  height: var(--diameter);
  top: calc((var(--row) + 1) * var(--cellSize));
  left: calc((var(--col) + 1) * var(--cellSize));
  background: red;
  border-radius: 100%;
  z-index: 1000;
  transform: translate(-50%, -50%);

  display: none;
}

.player {
  --row: 0;
  --col: 0;
  --diameter: 35px;
  --posX:1;
  --posY:1;

  position: absolute;
  width: var(--diameter);
  height: var(--diameter);
  left: calc((var(--col) + var(--posX)  + 1) * var(--cellSize));
  top: calc((var(--row) + var(--posY)  + 1) * var(--cellSize));
  background: yellow;
  border-radius: 100%;
  z-index: 1000;
  transform: translate(-50%, -50%);
  pointer-events: none;
  transition: all .1s;
}

.activePlayer {
  background-color: pink;
}

.player.collide {

  --bumpX: 50%;
  --bumpY: 50%;

  animation: collide .15s normal;
}

.target {
  --row: 0;
  --col: 0;
  --diameter: 25px;
  --posX:1;
  --posY:1;

  position: absolute;
  width: var(--diameter);
  height: var(--diameter);
  left: calc((var(--col) + var(--posX)) * var(--cellSize));
  top: calc((var(--row) + var(--posY)) * var(--cellSize));
  background: rgb(0,0,0);
 
  border-radius: 100%;
  border: solid 0.5em ;
  border-color: yellow !important;
  z-index: 999;
  transform: translate(-50%, -50%);
  pointer-events: none;

  /* box-shadow:
  0 0 10px 5px #fff, 
  0 0 20px 10px #f0f, 
  0 0 30px 15px #0ff;  */

 /* width: 300px;
  height: 300px;
  border-radius: 50%;
  box-shadow:
    inset 0 0 50px #fff,      /* inner white 
    inset 20px 0 80px #f0f,   /* inner left magenta short 
    inset -20px 0 80px #0ff,  /* inner right cyan short 
    inset 20px 0 300px #f0f,  /* inner left magenta broad 
    inset -20px 0 300px #0ff, /* inner right cyan broad 
    0 0 50px #fff,            /* outer white 
    -10px 0 80px #f0f,        /* outer left magenta 
    10px 0 80px #0ff;         /* outer right cyan */
}

@keyframes collide {
  0% {
    transform: translate(-50%, -50%);
  }

  50% {

    transform: translate(calc(-50% + var(--bumpX)), calc(-50% + var(--bumpY)));

  }

  100% {
    transform: translate(-50%, -50%);
  }

}


/*PATTERN*/

.pattern {
  width: 100%;
  height: 100%;
 background: #030500;
}

.circle1 {
  --radius: 93%;
  width: var(--radius);
  height: var(--radius);
  position: absolute;
  top: 0;
  left: 0;

  transform: translate(-50%, -50%);
  border: 5px solid aliceblue;
  border-radius: 100%;
}

.circle2 {
  --radius: 93%;
  width: var(--radius);
  height: var(--radius);
  position: absolute;
  top: 100%;
  left: 100%;
  transform: translate(-50%, -50%);
  border: 5px solid aliceblue;
  border-radius: 100%;
}

.template {
  display: none;
}
